{"version":3,"sources":["components/count/count.component.jsx","components/action/action.component.jsx","components/addoption/addoption.component.jsx","components/header/header.component.jsx","components/modal/modal.component.jsx","components/option/option.component.jsx","components/options/options.component.jsx","components/indecisionapp/indecesionapp.component.jsx","App.js","index.js"],"names":["Count","Action","hasOption","handlePick","className","onClick","disabled","Addoption","props","useState","undefined","errors","setError","onSubmit","e","preventDefault","option","target","elements","value","trim","error","handleAddOption","type","name","Header","title","subtitle","OptionModal","isOpen","selectedOption","contentLabel","onRequestClose","handleSelectedOption","Option","count","optionText","handleDeleteOption","Options","options","length","handleDeleteAll","map","index","handleKeyId","Indecesionapp","setOption","setSelectedOption","id","setId","textBooks","setTextBook","useEffect","notesData","JSON","parse","localStorage","getItem","console","log","setItem","stringify","randomNumber","Math","floor","random","takeOptions","filter","item","indexOf","NumberId","body","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.05b6ae8f.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\n\r\nfunction Count() {\r\n    const [count,setCount]=useState(0);\r\n    const [text,setText]=useState('');\r\n\r\n    return (\r\n        <div>\r\n            <p>the current {text || 'count'} is {count}</p>\r\n            <button onClick={()=> setCount(count -1)}>-1</button>\r\n            <button onClick={()=> setCount(count)}>reset</button>\r\n            <button onClick={()=> setCount(count +1)}>+1</button>\r\n            <input value={text} onChange={(e)=> setText(e.target.value)}  />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Count;","import React from 'react';\r\nimport './action.styles.css'\r\n\r\n\r\n\r\nfunction Action({hasOption,handlePick}) {\r\n\r\n   \r\n\r\n\r\n    return (\r\n        <div>\r\n            <button\r\n                className='buttonAction'\r\n                onClick={handlePick}\r\n                disabled={!hasOption}\r\n            >What should i DO ?</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Action;\r\n","import React,{useState} from 'react'\r\nimport './addoption.styles.css'\r\n\r\nfunction Addoption(props) {\r\n    \r\n    const [errors,setError] = useState(undefined)\r\n\r\n    const handleAddOption = (e) => {\r\n\r\n        e.preventDefault();\r\n        const option = e.target.elements.option.value.trim();\r\n        const error = props.handleAddOption(option);\r\n        setError(error);\r\n\r\n        if (!error) {\r\n            e.target.elements.option.value = '';\r\n        }\r\n    }\r\n        \r\n            \r\n      \r\n\r\n    return (\r\n        <div className='formdiv'>\r\n            {errors && <p>{errors}</p> }\r\n            <form className='form' onSubmit={handleAddOption}>\r\n                <input type='text' name='option' />\r\n                \r\n                    <button className='buttonAdd' >Add Option</button>\r\n               \r\n               \r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Addoption;\r\n","import React from 'react'\r\n\r\n\r\n\r\n\r\nfunction Header(props) {\r\n    return (\r\n        <div>\r\n            <h1>{props.title}</h1>\r\n            <h2>{props.subtitle}</h2>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\nimport '../modal/modal.styles.css'\r\n\r\nconst OptionModal=(props) => (\r\n    <Modal className='Modals'\r\n        isOpen={!!props.selectedOption}\r\n        contentLabel='Selected Option'\r\n        onRequestClose={props.handleSelectedOption}\r\n    >\r\n        <h3>Selected Options Here</h3>\r\n        {props.selectedOption && <p>{props.selectedOption}</p>}\r\n        <button onClick={props.handleSelectedOption}>Okay</button>\r\n    </Modal>\r\n) \r\n\r\n\r\nexport default OptionModal;\r\n","import React from 'react'\r\n\r\n\r\n\r\nfunction Option(props) {\r\n    let i = 0;\r\n    \r\n    \r\n    return (\r\n        <div>\r\n            { ` ${props.count} -  ${props.optionText}`}\r\n            <button onClick={(e) => {\r\n                props.handleDeleteOption(props.optionText);\r\n            }}\r\n            >\r\n                X\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Option;\r\n","import React from 'react'\r\nimport Option from '../option/option.component'\r\nimport './options.styles.css'\r\n\r\n// const handleRemoveAll= (e)=> {\r\n//     console.log(e.options)\r\n// }\r\n\r\n\r\n\r\nfunction Options(props) {\r\n\r\n\r\n    return (\r\n        <div>\r\n            {props.options.length === 0 && <p>Please add option to store </p>}\r\n    \r\n            <button className='buttonRemveAll' onClick={props.handleDeleteAll} >Remove All</button>\r\n            {props.options.map((options,index) =>\r\n                <Option\r\n                count={index + 1}\r\n                key={props.handleKeyId()}\r\n                optionText={options}\r\n                handleDeleteOption={props.handleDeleteOption}\r\n            />)}\r\n        </div>\r\n    )\r\n    \r\n}\r\n \r\n\r\n\r\nexport default Options;\r\n","import React,{useState,useEffect} from 'react'\r\nimport Action from '../action/action.component';\r\nimport Addoption from '../addoption/addoption.component';\r\nimport Header from '../header/header.component';\r\nimport OptionModal from '../modal/modal.component';\r\nimport Options from '../options/options.component';\r\n\r\n\r\nimport '../indecisionapp/indecesion.styles.css'\r\n\r\nconst title = 'Indecesion';\r\nconst subtitle = 'Put your life in the hands of a computer.';\r\n// const options = ['Thing one','Thing two','Thing three'];\r\n\r\n\r\n\r\n\r\nfunction Indecesionapp() {\r\n\r\n\r\n\r\n\r\n    const [options, setOption] = useState([]);\r\n  \r\n\r\n    // const [options, setOption] = useState([{\r\n    //     id: 1,\r\n    //     title: '',\r\n    //     body:''\r\n    // }]);\r\n    \r\n    let [selectedOption, setSelectedOption] = useState(undefined);\r\n    let [id, setId] = useState(0)\r\n    var [textBooks, setTextBook] = useState([]);\r\n\r\n    const handleDeleteOption = (takeOptions) => {\r\n        setOption(options.filter((item) => item !== takeOptions))\r\n\r\n        // for (let items of textBooks) {\r\n        //     console.log(items.filter((item) => items.title === takeOptions));\r\n        //     // setTextBook(items.filter((item) => item.title !== takeOptions))\r\n        // }\r\n\r\n        setTextBook(textBooks.filter((item) => item.title !== takeOptions))\r\n            \r\n    \r\n\r\n        // var marvelHeroes =  textBooks.filter(function(hero) {\r\n        //     return hero.title !== takeOptions;\r\n        // });\r\n        \r\n        // setOption({ ...options, title : options.title.filter((item) => item !== takeOptions) })\r\n    }\r\n        \r\n\r\n    const handleDeleteAll = () => {\r\n        setOption([]);\r\n        setId(id = 0);\r\n    }\r\n\r\n    const handlePick = () =>{\r\n        const randomNumber = Math.floor(Math.random() * options.length);\r\n        const option = options[randomNumber]; \r\n        setSelectedOption(selectedOption= option)\r\n    } \r\n\r\n    \r\n    const handleAddOption = (option) => {\r\n\r\n        if (!option) {\r\n            return 'Enter valid value to add item'\r\n        } else if (options.indexOf(option) > -1 ){\r\n            return 'This item already exist !'\r\n        }\r\n        setOption([...options, option]); \r\n\r\n\r\n        setId(id + 1);\r\n        setTextBook([...textBooks,{\r\n            NumberId:  id+1,\r\n            body: 'new body',\r\n            title : option\r\n        \r\n        }])\r\n\r\n        // setOption([{ ...options,title: option.title }]);\r\n    }\r\n\r\n  \r\n    const handleKeyId = () => (\r\n        Math.floor(Math.random() * 100000) \r\n     )\r\n\r\n    const handleSelectedOption = () => {\r\n        setSelectedOption(setSelectedOption=null)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const notesData = JSON.parse(localStorage.getItem('options'));\r\n        if (notesData) {\r\n            setOption(notesData );\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log(textBooks);\r\n    },[textBooks])\r\n\r\n\r\n    //----\r\n    //     try {\r\n    //         const notesData = JSON.parse(localStorage.getItem('options'));\r\n    //         if (notesData) {\r\n    //             setOption(notesData);\r\n    //         }\r\n    //     } catch (e) {\r\n    //         console.log('there is no data')\r\n    //     }\r\n       \r\n    // }, [])\r\n    \r\n    useEffect(() => {\r\n        localStorage.setItem('options', JSON.stringify(options), [options]);\r\n    }, [options]);\r\n\r\n    return (\r\n        <div className='indecesionStyle'>\r\n            \r\n            <Header title={title} subtitle={subtitle}/>\r\n            <Action\r\n                hasOption={options.length > 0}\r\n                handlePick={handlePick}\r\n            />\r\n            <Options\r\n                options={options}\r\n                handleDeleteAll={handleDeleteAll}\r\n                handleDeleteOption={handleDeleteOption}\r\n                handleKeyId={handleKeyId}\r\n            />\r\n            <Addoption\r\n                handleAddOption={handleAddOption}\r\n            /> \r\n            <OptionModal\r\n                selectedOption={selectedOption}\r\n                handleSelectedOption={handleSelectedOption}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Indecesionapp;\r\n","import React,{useState,useEffect,useReducer} from 'react';\nimport './App.css';\nimport Count from './components/count/count.component';\nimport Indecesionapp from './components/indecisionapp/indecesionapp.component';\nimport Notes from './components/notes/notes.component';\n\n\nfunction App(props) {\n  \n\n\n  return (\n    <div className='App'>\n      <Indecesionapp />\n      {/* <hr></hr>\n      <Count/>\n      <hr></hr>\n      <Notes /> */}\n      \n     \n    </div>\n \n  );\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}